	4: Palavra reservada: INT, Lexema: int
	4: ID, name= vet
	4: [
	4: NUM, val= 10
	4: ]
	4: ;
	5: Palavra reservada: INT, Lexema: int
	5: ID, name= teste
	5: ;
	7: Palavra reservada: INT, Lexema: int
	7: ID, name= minloc
	7: (
	7: Palavra reservada: INT, Lexema: int
	7: ID, name= a
	7: [
	7: ]
	7: ,
	7: Palavra reservada: INT, Lexema: int
	7: ID, name= low
	7: ,
	7: Palavra reservada: INT, Lexema: int
	7: ID, name= high
	7: )
	8: {
	8: Palavra reservada: INT, Lexema: int
	8: ID, name= i
	8: ;
	8: Palavra reservada: INT, Lexema: int
	8: ID, name= x
	8: ;
	8: Palavra reservada: INT, Lexema: int
	8: ID, name= k
	8: ;
	9: ID, name= k
	9: =
	9: ID, name= low
	9: ;
	10: ID, name= x
	10: =
	10: ID, name= a
	10: [
	10: ID, name= low
	10: ]
	10: ;
	11: ID, name= i
	11: =
	11: ID, name= low
	11: +
	11: NUM, val= 1
	11: ;
	12: Palavra reservada: WHILE, Lexema: while
	12: (
	12: ID, name= i
	12: <
	12: ID, name= high
	12: )
	12: {
	13: Palavra reservada: IF, Lexema: if
	13: (
	13: ID, name= a
	13: [
	13: ID, name= i
	13: ]
	13: <
	13: ID, name= x
	13: )
	13: {
	14: ID, name= x
	14: =
	14: ID, name= a
	14: [
	14: ID, name= i
	14: ]
	14: ;
	15: ID, name= k
	15: =
	15: ID, name= i
	15: ;
	16: }
	17: ID, name= i
	17: =
	17: ID, name= i
	17: +
	17: NUM, val= 1
	17: ;
	18: }
	19: Palavra reservada: RETURN, Lexema: return
	19: ID, name= k
	19: ;
	20: }
	22: Palavra reservada: VOID, Lexema: void
	22: ID, name= sort
	22: (
	22: Palavra reservada: INT, Lexema: int
	22: ID, name= a
	22: [
	22: ]
	22: ,
	22: Palavra reservada: INT, Lexema: int
	22: ID, name= low
	22: ,
	22: Palavra reservada: INT, Lexema: int
	22: ID, name= high
	22: )
	23: {
	23: Palavra reservada: INT, Lexema: int
	23: ID, name= i
	23: ;
	23: Palavra reservada: INT, Lexema: int
	23: ID, name= k
	23: ;
	24: ID, name= i
	24: =
	24: ID, name= low
	24: ;
	25: ID, name= teste
	25: =
	25: ID, name= teste
	25: +
	25: NUM, val= 1
	25: ;
	26: Palavra reservada: WHILE, Lexema: while
	26: (
	26: ID, name= i
	26: <
	26: ID, name= high
	26: -
	26: NUM, val= 1
	26: )
	26: {
	27: Palavra reservada: INT, Lexema: int
	27: ID, name= t
	27: ;
	28: ID, name= k
	28: =
	28: ID, name= minloc
	28: (
	28: ID, name= a
	28: ,
	28: ID, name= i
	28: ,
	28: ID, name= high
	28: )
	28: ;
	29: ID, name= t
	29: =
	29: ID, name= a
	29: [
	29: ID, name= k
	29: ]
	29: ;
	30: ID, name= a
	30: [
	30: ID, name= k
	30: ]
	30: =
	30: ID, name= a
	30: [
	30: ID, name= i
	30: ]
	30: ;
	31: ID, name= a
	31: [
	31: ID, name= i
	31: ]
	31: =
	31: ID, name= t
	31: ;
	32: ID, name= i
	32: =
	32: ID, name= i
	32: +
	32: NUM, val= 1
	32: ;
	33: }
	34: }
	36: Palavra reservada: VOID, Lexema: void
	36: ID, name= main
	36: (
	36: Palavra reservada: VOID, Lexema: void
	36: )
	37: {
	38: Palavra reservada: INT, Lexema: int
	38: ID, name= i
	38: ;
	39: Palavra reservada: INT, Lexema: int
	39: ID, name= vet2
	39: [
	39: NUM, val= 2
	39: ]
	39: ;
	40: ID, name= i
	40: =
	40: NUM, val= 0
	40: ;
	41: Palavra reservada: WHILE, Lexema: while
	41: (
	41: ID, name= i
	41: <
	41: NUM, val= 10
	41: )
	41: {
	42: ID, name= vet
	42: [
	42: ID, name= i
	42: ]
	42: =
	42: ID, name= input
	42: (
	42: )
	42: ;
	43: ID, name= i
	43: =
	43: ID, name= i
	43: +
	43: NUM, val= 1
	43: ;
	44: }
	45: ID, name= sort
	45: (
	45: ID, name= vet
	45: ,
	45: NUM, val= 0
	45: ,
	45: NUM, val= 10
	45: )
	45: ;
	46: ID, name= vet2
	46: [
	46: NUM, val= 0
	46: ]
	46: =
	46: NUM, val= 1
	46: ;
	47: ID, name= vet2
	47: [
	47: NUM, val= 1
	47: ]
	47: =
	47: NUM, val= 3
	47: ;
	48: ID, name= i
	48: =
	48: NUM, val= 0
	48: ;
	49: Palavra reservada: WHILE, Lexema: while
	49: (
	49: ID, name= i
	49: <
	49: NUM, val= 10
	49: )
	49: {
	50: ID, name= output
	50: (
	50: ID, name= vet
	50: [
	50: ID, name= i
	50: ]
	50: )
	50: ;
	51: ID, name= i
	51: =
	51: ID, name= i
	51: +
	51: NUM, val= 1
	51: ;
	52: ID, name= teste
	52: =
	52: ID, name= teste
	52: +
	52: NUM, val= 1
	52: ;
	53: }
	54: }
