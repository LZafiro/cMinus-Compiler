	1: Palavra reservada: INT, Lexema: int
	1: ID, name= vet
	1: [
	1: NUM, val= 10
	1: ]
	1: ;
	3: Palavra reservada: INT, Lexema: int
	3: ID, name= minloc
	3: (
	3: Palavra reservada: INT, Lexema: int
	3: ID, name= a
	3: [
	3: ]
	3: ,
	3: Palavra reservada: INT, Lexema: int
	3: ID, name= low
	3: ,
	3: Palavra reservada: INT, Lexema: int
	3: ID, name= high
	3: )
	3: {
	4: Palavra reservada: INT, Lexema: int
	4: ID, name= i
	4: ;
	5: Palavra reservada: INT, Lexema: int
	5: ID, name= x
	5: ;
	6: Palavra reservada: INT, Lexema: int
	6: ID, name= k
	6: ;
	8: ID, name= k
	8: =
	8: ID, name= low
	8: ;
	9: ID, name= x
	9: =
	9: ID, name= a
	9: [
	9: ID, name= low
	9: ]
	9: ;
	10: ID, name= i
	10: =
	10: ID, name= low
	10: +
	10: NUM, val= 1
	10: ;
	12: Palavra reservada: WHILE, Lexema: while
	12: (
	12: ID, name= i
	12: <
	12: ID, name= high
	12: )
	12: {
	13: Palavra reservada: IF, Lexema: if
	13: (
	13: ID, name= a
	13: [
	13: ID, name= i
	13: ]
	13: <
	13: ID, name= x
	13: )
	13: {
	14: ID, name= x
	14: =
	14: ID, name= a
	14: [
	14: ID, name= i
	14: ]
	14: ;
	15: ID, name= k
	15: =
	15: ID, name= i
	15: ;
	16: }
	17: ID, name= i
	17: =
	17: ID, name= i
	17: +
	17: NUM, val= 1
	17: ;
	18: }
	19: Palavra reservada: RETURN, Lexema: return
	19: ID, name= k
	19: ;
	20: }
	22: Palavra reservada: VOID, Lexema: void
	22: ID, name= sort
	22: (
	22: Palavra reservada: INT, Lexema: int
	22: ID, name= a
	22: [
	22: ]
	22: ,
	22: Palavra reservada: INT, Lexema: int
	22: ID, name= low
	22: ,
	22: Palavra reservada: INT, Lexema: int
	22: ID, name= high
	22: )
	22: {
	23: Palavra reservada: INT, Lexema: int
	23: ID, name= i
	23: ;
	24: Palavra reservada: INT, Lexema: int
	24: ID, name= k
	24: ;
	26: ID, name= i
	26: =
	26: ID, name= low
	26: ;
	28: Palavra reservada: WHILE, Lexema: while
	28: (
	28: ID, name= i
	28: <
	28: ID, name= high
	28: -
	28: NUM, val= 1
	28: )
	28: {
	29: Palavra reservada: INT, Lexema: int
	29: ID, name= t
	29: ;
	30: ID, name= k
	30: =
	30: ID, name= minloc
	30: (
	30: ID, name= a
	30: ,
	30: ID, name= i
	30: ,
	30: ID, name= high
	30: )
	30: ;
	31: ID, name= t
	31: =
	31: ID, name= a
	31: [
	31: ID, name= k
	31: ]
	31: ;
	32: ID, name= a
	32: [
	32: ID, name= k
	32: ]
	32: =
	32: ID, name= a
	32: [
	32: ID, name= i
	32: ]
	32: ;
	33: ID, name= a
	33: [
	33: ID, name= i
	33: ]
	33: =
	33: ID, name= t
	33: ;
	34: ID, name= i
	34: =
	34: ID, name= i
	34: +
	34: NUM, val= 1
	34: ;
	35: }
	36: }
	38: Palavra reservada: VOID, Lexema: void
	38: ID, name= main
	38: (
	38: Palavra reservada: VOID, Lexema: void
	38: )
	38: {
	39: Palavra reservada: INT, Lexema: int
	39: ID, name= i
	39: ;
	41: ID, name= i
	41: =
	41: NUM, val= 0
	41: ;
	43: Palavra reservada: WHILE, Lexema: while
	43: (
	43: ID, name= i
	43: <
	43: NUM, val= 10
	43: )
	43: {
	44: ID, name= vet
	44: [
	44: ID, name= i
	44: ]
	44: =
	44: ID, name= input
	44: (
	44: )
	44: ;
	45: ID, name= i
	45: =
	45: ID, name= i
	45: +
	45: NUM, val= 1
	45: ;
	46: }
	47: ID, name= sort
	47: (
	47: ID, name= vet
	47: ,
	47: NUM, val= 0
	47: ,
	47: NUM, val= 10
	47: )
	47: ;
	48: ID, name= i
	48: =
	48: NUM, val= 0
	48: ;
	49: Palavra reservada: WHILE, Lexema: while
	49: (
	49: ID, name= i
	49: <
	49: NUM, val= 10
	49: )
	49: {
	50: ID, name= output
	50: (
	50: ID, name= vet
	50: [
	50: ID, name= i
	50: ]
	50: )
	50: ;
	51: ID, name= i
	51: =
	51: ID, name= i
	51: +
	51: NUM, val= 1
	51: ;
	52: }
	53: }
